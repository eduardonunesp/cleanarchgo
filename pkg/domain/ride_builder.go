// Code generated by scaffold. DO NOT EDIT.

package domain

import "github.com/eduardonunesp/cleanarchgo/pkg/domain/valueobject"

type rideOption func(*Ride) error

func BuildRide(options ...rideOption) (*Ride, error) {
	newRide := Ride{}
	for _, opt := range options {
		if err := opt(&newRide); err != nil {
			return nil, RaiseDomainError(err)
		}
	}
	return &newRide, nil
}

func RideWithID(id string) rideOption {
	return func(opt *Ride) error {
		var err error
		opt.id, err = valueobject.UUIDFromString(id)
		return err
	}
}

func RideWithNewID() rideOption {
	return func(opt *Ride) error {
		opt.id = valueobject.MustUUID()	
		return nil
	}
}

func RideWithPassengerID(passengerId string) rideOption {
	return func(opt *Ride) error {
		var err error
		opt.passengerID, err = valueobject.UUIDFromString(passengerId)
		return err
	}
}

func RideWithNewPassengerID() rideOption {
	return func(opt *Ride) error {
		opt.passengerID = valueobject.MustUUID()	
		return nil
	}
}

func RideWithDriverID(driverId string) rideOption {
	return func(opt *Ride) error {
		var err error
		opt.driverID, err = valueobject.UUIDFromString(driverId)
		return err
	}
}

func RideWithNewDriverID() rideOption {
	return func(opt *Ride) error {
		opt.driverID = valueobject.MustUUID()	
		return nil
	}
}

func RideWithStatus(status string) rideOption {
	return func(opt *Ride) error {
		var err error
		opt.status, err = valueobject.BuildRideStatus(status)
		return err
	}
}

func RideWithFare(fare string) rideOption {
	return func(opt *Ride) error {
		opt.fare = fare
		return nil
	}
}

func RideWithSegment(fx, fy, tx, ty string) rideOption {
	return func(p *Ride) error {
		var err error
		p.segment, err = valueobject.BuildSegmentFromCoords(fx, fy, tx, ty)
		return err
	}
}

func RideWithDate(date int64) rideOption {
	return func(opt *Ride) error {
		var err error
		opt.date, err = valueobject.DateFromUnix(date)
		return err
	}
}
