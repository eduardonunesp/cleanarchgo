// Code generated by mockery v2.42.2. DO NOT EDIT.

package test

import (
	domain "github.com/eduardonunesp/cleanarchgo/pkg/domain"
	mock "github.com/stretchr/testify/mock"
)

// MockPositionRepositoryRO is an autogenerated mock type for the PositionRepositoryRO type
type MockPositionRepositoryRO struct {
	mock.Mock
}

type MockPositionRepositoryRO_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPositionRepositoryRO) EXPECT() *MockPositionRepositoryRO_Expecter {
	return &MockPositionRepositoryRO_Expecter{mock: &_m.Mock}
}

// GetPositionsByRideID provides a mock function with given fields: rideID
func (_m *MockPositionRepositoryRO) GetPositionsByRideID(rideID string) ([]*domain.Position, error) {
	ret := _m.Called(rideID)

	if len(ret) == 0 {
		panic("no return value specified for GetPositionsByRideID")
	}

	var r0 []*domain.Position
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]*domain.Position, error)); ok {
		return rf(rideID)
	}
	if rf, ok := ret.Get(0).(func(string) []*domain.Position); ok {
		r0 = rf(rideID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.Position)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(rideID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockPositionRepositoryRO_GetPositionsByRideID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPositionsByRideID'
type MockPositionRepositoryRO_GetPositionsByRideID_Call struct {
	*mock.Call
}

// GetPositionsByRideID is a helper method to define mock.On call
//   - rideID string
func (_e *MockPositionRepositoryRO_Expecter) GetPositionsByRideID(rideID interface{}) *MockPositionRepositoryRO_GetPositionsByRideID_Call {
	return &MockPositionRepositoryRO_GetPositionsByRideID_Call{Call: _e.mock.On("GetPositionsByRideID", rideID)}
}

func (_c *MockPositionRepositoryRO_GetPositionsByRideID_Call) Run(run func(rideID string)) *MockPositionRepositoryRO_GetPositionsByRideID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockPositionRepositoryRO_GetPositionsByRideID_Call) Return(_a0 []*domain.Position, _a1 error) *MockPositionRepositoryRO_GetPositionsByRideID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockPositionRepositoryRO_GetPositionsByRideID_Call) RunAndReturn(run func(string) ([]*domain.Position, error)) *MockPositionRepositoryRO_GetPositionsByRideID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPositionRepositoryRO creates a new instance of MockPositionRepositoryRO. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPositionRepositoryRO(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPositionRepositoryRO {
	mock := &MockPositionRepositoryRO{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
